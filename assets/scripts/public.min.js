$(document).ready(function(){Modernizr.load([{test:window.JSON,nope:'assets/scripts/libs/json2.min.js'}]);$('[rel="tooltip"]').tooltip();});;(function($){$.jnotify=function(m,o,d){return new jNotify(m,o,d);}; $.jnotify.version="1.1.00";var $jnotify,queue=[],count=0,playing=false,paused=false,queuedId,queuedNote, defaults={ type:"",delay:2000,sticky:false,closeLabel:"&times;",showClose:true,fadeSpeed:1000,slideSpeed:250
,classContainer:"jnotify-container",classNotification:"jnotify-notification",classBackground:"jnotify-background",classClose:"jnotify-close",classMessage:"jnotify-message"
,init:null,create:null,beforeRemove:null,remove:null,transition:null}; $.jnotify.setup=function(o){defaults=$.extend({},defaults,o);};$.jnotify.play=function(f,d){if(playing&&(f!==true)||(queue.length==0))return;playing=true; var note=queue.shift();queuedNote=note; var delay=(arguments.length>=2)?parseInt(d,10):note.options.delay; queuedId=setTimeout(function(){ queuedId=0;note.remove(function(){ if(queue.length==0)playing=false; else if(!paused)$.jnotify.play(true);});},delay);};$.jnotify.pause=function(){clearTimeout(queuedId); if(queuedId)queue.unshift(queuedNote);paused=playing=true;}
$.jnotify.resume=function(){ paused=false; $.jnotify.play(true,0);}
function jNotify(message,options){ var self=this,TO=typeof options;if(TO=="number"){options=$.extend({},defaults,{delay:options});}else if(TO=="boolean"){options=$.extend({},defaults,{sticky:true});}else if(TO=="string"){options=$.extend({},defaults,{type:options,delay:((arguments.length>2)&&(typeof arguments[2]=="number"))?arguments[2]:defaults.delay,sticky:((arguments.length>2)&&(typeof arguments[2]=="boolean"))?arguments[2]:defaults.sticky});}else{options=$.extend({},defaults,options);} 
this.options=options; if(!$jnotify){ $jnotify=$('<div class="'+defaults.classContainer+'" />').appendTo("body");if($.isFunction(options.init))options.init.apply(self,[$jnotify]);} 
function create(message){var html='<div class="'+options.classNotification+(options.type.length?(" "+options.classNotification+"-"+options.type):"")+'">'
+'<div class="'+options.classBackground+'"></div>'
+(options.sticky&&options.showClose?('<a class="'+options.classClose+'">'+options.closeLabel+'</a>'):'')
+'<div class="'+options.classMessage+'">'
+'<div>'+message+'</div>'
+'</div></div>'; count++; var $note=$(html);if(options.sticky){ $note.find("a."+options.classClose).bind("click.jnotify",function(){self.remove();});} 
if($.isFunction(options.create))options.create.apply(self,[$note]); return $note.appendTo($jnotify);} 
this.remove=function(callback){var $msg=$note.find("."+options.classMessage),$parent=$msg.parent(); var index=count--; if($.isFunction(options.beforeRemove))options.beforeRemove.apply(self,[$msg]); function finished(){ $parent.remove(); if($.isFunction(callback))callback.apply(self,[$msg]);if($.isFunction(options.remove))options.remove.apply(self,[$msg]);} 
if($.isFunction(options.transition))options.transition.apply(self,[$parent,$msg,index,finished,options]);else{$msg.fadeTo(options.fadeSpeed,0.01,function(){ if(index<=1)finished(); else $parent.slideUp(options.slideSpeed,finished);}); if(count<=0)$parent.fadeOut(options.fadeSpeed);}} 
var $note=create(message); if(!options.sticky){ queue.push(this); $.jnotify.play();}
return this;};})(jQuery);$(document).ready(function(){ status_messages();});function status_messages(){$('div.status').each(function(){var type=$(this).data('type');var sticky=false;if(type=='error'||type=='warning'){sticky=true;}
$(this).find('ul li').each(function(){$.jnotify($(this).text(),type,sticky);});});}